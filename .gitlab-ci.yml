image: dtzar/helm-kubectl  # alpine image with the latest helm and kubectl

variables:
  RELEASE_SCRIPT: 'https://gitlab.com/transcrobes/utils/raw/master/release.py'
  CHART_NAME: transcrobes
  DEPLOY_DIR: public
  CI_PAGES_URL: http://chartstest.melser.org  # remove when 11.8 is release

stages:
  - test
  - build
  - deploy

test:
  stage: test
  script:
    - helm lint ${CHART_NAME}
  except:
    - schedules

pages:
  stage: deploy

  before_script:
    - apk add python3
    - pip3 install -r requirements.txt

  script:
    - python3 publish_charts.py --base_url ${CI_PAGES_URL} --chart_name ${CHART_NAME} ${PRIVATE_TOKEN} ${DEPLOY_DIR}
    - "echo \"User-Agent: *\nDisallow: /\" > ./public/robots.txt"
  artifacts:
    paths:
      - ${DEPLOY_DIR}
  except:
    - schedules

build:
  stage: build
  before_script:
    - apk add python3
    - pip3 install -r requirements.txt
  script:
    - python3 validate_chart_release.py
    - helm dependency update transcrobes/
    - helm package transcrobes/
    - wget $RELEASE_SCRIPT
    - python3 release.py $PRIVATE_TOKEN transcrobes-*.*.*.tgz
  only:
    - tags
  except:
    - schedules

.issue-certificate:
  image: node:10
  stage: build
  script:
    - |-
      echo "Check if env variables are set properly"
      for var in LE_EMAIL LE_DOMAINS LE_GITLAB_REPOSITORY LE_GITLAB_TOKEN LE_CHALLENGE_PATH; do
        if [ -z "${!var}" ]; then
          echo "$var is blank; Please ensure it is set"
          exit 1
        fi
      done
    - yarn global add @leipert/gitlab-letsencrypt@^4.0.0
    - >-
      gitlab-pages-le
      --email ${LE_EMAIL}
      --domain ${LE_DOMAINS}
      --repository ${LE_GITLAB_REPOSITORY}
      --token ${LE_GITLAB_TOKEN}
      --path ${LE_CHALLENGE_PATH}
      ${LE_PROD_FLAG}

letsencrypt-renewal:
  extends: .issue-certificate
  only:
    - schedules
