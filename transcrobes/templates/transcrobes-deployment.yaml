{{- if .Values.transcrobes.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "transcrobes.transcrobes.fullname" . }}
  labels:
    {{- include "transcrobes.transcrobes.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.transcrobes.replicaCount }}
  {{- if .Values.transcrobes.strategy }}
  strategy:
{{ toYaml .Values.transcrobes.strategy | indent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "transcrobes.transcrobes.matchLabels" . | nindent 6 }}
      # release: prometheus
  template:
    metadata:
    {{- if .Values.transcrobes.podAnnotations }}
      annotations:
{{ toYaml .Values.transcrobes.podAnnotations | indent 8 }}
    {{- end }}
      labels:
        {{- include "transcrobes.transcrobes.labels" . | nindent 8 }}
        # release: prometheus
    spec:
      initContainers:
        - name: check-db-ready
          image: postgres:13
          command: ['sh', '-c',
            'until psql -c "select 1;";
            do echo waiting for database; sleep 2; done;']
          env:
            - name: PGUSER
              value: "{{ .Values.pgha.postgresql.username }}"
            - name: PGDATABASE
              value: "{{ .Values.pgha.postgresql.database }}"
            - name: PGPASSWORD
              value: "{{ .Values.pgha.postgresql.password }}"
            - name: PGHOST
              value: "{{ .Release.Name }}-pgha-pgpool"
      containers:
        - name: {{ template "transcrobes.name" . }}-{{ .Values.transcrobes.name }}
          image: "{{ .Values.transcrobes.image.repository }}:{{ .Values.transcrobes.image.tag }}"
          imagePullPolicy: {{ .Values.transcrobes.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.transcrobes.application.listenPort }}
              protocol: TCP
          env:
            - name: TRANSCROBES_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: TRANSCROBES_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: TRANSCROBES_HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP

            - name: TRANSCROBES_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name

            - name: TRANSCROBES_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            {{- range $key, $value := .Values.transcrobes.extraEnv }}
            - name: {{ $key }}
              value: "{{ $value }}"
            {{- end }}
            - name: PYTHONUNBUFFERED  # MUST put or no logs printed to kube, but probably should be in values
              value: "0"
            - name: TC_POSTGRES_USER
              value: "{{ .Values.pgha.postgresql.username }}"
            - name: TC_POSTGRES_DATABASE
              value: "{{ .Values.pgha.postgresql.database }}"
            - name: TC_POSTGRES_PASSWORD
              value: "{{ .Values.pgha.postgresql.password }}"
            - name: TC_POSTGRES_HOST
              value: "{{ .Release.Name }}-pgha-pgpool"
            - name: TC_DJANKISERV_USERDB_USER
              value: "{{ .Values.pgha.postgresql.username }}"
            - name: TC_DJANKISERV_USERDB_NAME
              value: "{{ .Values.pgha.postgresql.database }}"
            - name: TC_DJANKISERV_USERDB_PASSWORD
              value: "{{ .Values.pgha.postgresql.password }}"
            - name: TC_DJANKISERV_USERDB_HOST
              value: "{{ .Release.Name }}-pgha-pgpool"
            - name: TRANSCROBES_DJANKISERV_DATA_ROOT
              value: "{{ .Values.transcrobes.persistence.dataRoot }}{{ .Values.transcrobes.persistence.mediaPath }}"
            - name: TRANSCROBES_SYSTEM_HOSTS
              value: {{ include "transcrobes.transcrobes.fullname" . }},{{ include "transcrobes.transcrobes.reallyFullname" . }}
            - name: TRANSCROBES_NODE_HOSTS
              value: {{ include "transcrobes.nodeHosts" . }},
            - name: TRANSCROBES_HA_HOST
              value: "{{ .Values.transcrobes.haHost }}"
            - name: TRANSCROBES_SECRET_KEY
              value: "{{ .Values.transcrobes.secretKey }}"
            - name: TRANSCROBES_GUNICORN_WORKERS
              value: "{{ .Values.transcrobes.application.gunicornWorkers }}"
            - name: TRANSCROBES_GUNICORN_TIMEOUT
              value: "{{ .Values.transcrobes.application.gunicornTimeout }}"
            - name: TRANSCROBES_LISTEN_ADDRESS
              value: "{{ .Values.transcrobes.application.listenAddress }}"
            - name: TRANSCROBES_LISTEN_PORT
              value: "{{ .Values.transcrobes.application.listenPort }}"
            - name: TRANSCROBES_ZH_CORENLP_HOST
              value: {{ include "transcrobes.corenlpZh.fullname" . }}
            {{- if .Values.transcrobes.debug }}
            - name: TRANSCROBES_DEBUG
              value: "True"
            {{- end }}
            - name: TRANSCROBES_BING_SUBSCRIPTION_KEY
              value: "{{ .Values.transcrobes.bingSubscriptionKey }}"
            - name: TRANSCROBES_BING_API_HOST
              value: "{{ .Values.transcrobes.bingApiHost }}"
            - name: TRANSCROBES_ZH_EN_CEDICT_PATH
              value: "{{ .Values.transcrobes.persistence.dataRoot }}{{ .Values.transcrobes.zhEnCedict.path }}"
            - name: TRANSCROBES_ZH_EN_CEDICT_INMEM
              value: "{{ .Values.transcrobes.zhEnCedict.inmem }}"
            - name: TRANSCROBES_ZH_EN_ABC_DICT_PATH
              value: "{{ .Values.transcrobes.persistence.dataRoot }}{{ .Values.transcrobes.zhEnAbcDict.path }}"
            - name: TRANSCROBES_ZH_EN_ABC_DICT_INMEM
              value: "{{ .Values.transcrobes.zhEnAbcDict.inmem }}"
            - name: TRANSCROBES_ZH_HSK_LISTS_PATH
              value: "{{ .Values.transcrobes.persistence.dataRoot }}{{ .Values.transcrobes.zhHskLists.path }}"
            - name: TRANSCROBES_ZH_HSK_LISTS_INMEM
              value: "{{ .Values.transcrobes.zhHskLists.inmem }}"
            - name: TRANSCROBES_ZH_SUBTLEX_FREQ_PATH
              value: "{{ .Values.transcrobes.persistence.dataRoot }}{{ .Values.transcrobes.zhSubtlexFreq.path }}"
            - name: TRANSCROBES_ZH_SUBTLEX_FREQ_INMEM
              value: "{{ .Values.transcrobes.zhSubtlexFreq.inmem }}"
            {{- if .Values.kafka.enabled }}
            - name: TRANSCROBES_KAFKA_BROKER
              value: "{{ .Values.kafka.fullnameOverride }}"
            {{- end }}

      {{- if .Values.transcrobes.persistence.enabled }}
          volumeMounts:
          - mountPath: "{{ .Values.transcrobes.persistence.dataRoot }}"
            name: {{ include "transcrobes.transcrobes.fullname" . }}
      volumes:
        - name: {{ include "transcrobes.transcrobes.fullname" . }}
          persistentVolumeClaim:
            claimName: {{ include "transcrobes.transcrobes.fullname" . }}
      {{- end }}

      restartPolicy: Always
status: {}
{{- end }}
